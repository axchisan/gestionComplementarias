version: '3.8'

services:
  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://backend:5000/api
      - VITE_APP_NAME=SENA Formaci√≥n Complementaria
      - VITE_APP_VERSION=1.0.0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - sena-network

  # Backend Node.js (preparado para futuro)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=sena_formacion
      - DB_USER=sena_user
      - DB_PASSWORD=sena_password
      - JWT_SECRET=your-super-secret-jwt-key
      - JWT_EXPIRES_IN=24h
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - database
    networks:
      - sena-network

  # Base de datos PostgreSQL (preparado para futuro)
  database:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=sena_formacion
      - POSTGRES_USER=sena_user
      - POSTGRES_PASSWORD=sena_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sena-network

  # Redis para cache y sesiones (preparado para futuro)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sena-network

  # Nginx como proxy reverso (preparado para futuro)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - sena-network

volumes:
  postgres_data:
  redis_data:

networks:
  sena-network:
    driver: bridge
