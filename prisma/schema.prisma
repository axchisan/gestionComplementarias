// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")  
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  cedula    String   @unique
  telefono  String?
  role      Role     @default(INSTRUCTOR)
  centroId  String
  centro    Centro   @relation(fields: [centroId], references: [id])
  especialidad String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relaciones
  solicitudes Solicitud[]
  
  @@map("users")
}

model Centro {
  id        String   @id @default(cuid())
  nombre    String
  codigo    String   @unique
  direccion String?
  telefono  String?
  ciudad    String
  region    String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relaciones
  usuarios  User[]
  programas Programa[]
  
  @@map("centros")
}

model Programa {
  id              String   @id @default(cuid())
  codigo          String   @unique
  nombre          String
  tipoFormacion   TipoFormacion
  modalidad       Modalidad
  duracionHoras   Int
  cupoAprendices  Int
  descripcion     String?
  centroId        String
  centro          Centro   @relation(fields: [centroId], references: [id])
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relaciones
  objetivos       ObjetivoAprendizaje[]
  competencias    Competencia[]
  resultados      ResultadoAprendizaje[]
  solicitudes     Solicitud[]
  
  @@map("programas")
}

model ObjetivoAprendizaje {
  id          String   @id @default(cuid())
  descripcion String
  programaId  String
  programa    Programa @relation(fields: [programaId], references: [id])
  orden       Int      @default(1)
  
  @@map("objetivos_aprendizaje")
}

model Competencia {
  id          String   @id @default(cuid())
  descripcion String
  codigo      String?
  programaId  String
  programa    Programa @relation(fields: [programaId], references: [id])
  
  @@map("competencias")
}

model ResultadoAprendizaje {
  id          String   @id @default(cuid())
  descripcion String
  codigo      String?
  programaId  String
  programa    Programa @relation(fields: [programaId], references: [id])
  
  @@map("resultados_aprendizaje")
}

model Solicitud {
  id                    String   @id @default(cuid())
  codigo                String   @unique // SOL-2024-001
  instructorId          String
  instructor            User     @relation(fields: [instructorId], references: [id])
  programaId            String
  programa              Programa @relation(fields: [programaId], references: [id])
  
  fechaCaracterizacion  DateTime?
  responsableNombre     String   // Nombre del responsable de caracterización
  responsableCedula     String   // C.C. del responsable
  responsableEmail      String   // Email del responsable
  
  codigoPrograma        String   // Código del programa
  versionPrograma       String   @default("1") // Versión del programa
  duracionMaxima        Int      // Duración máxima en horas
  cupoMaximo            Int      // Cupo máximo de la ficha
  numeroAprendicesInscribir Int  // Número de aprendices a inscribir
  modalidad             Modalidad // Added modalidad field to match form data
  
  municipio             String
  departamento          String
  nombreEmpresa         String   // Nombre de la empresa/entidad
  nitEmpresa            String?  // NIT de la empresa
  codigoEmpresa         String?  // Código de empresa
  representanteLegal    String   // Representante legal
  fechaCreacionEmpresa  DateTime? // Fecha de creación de la empresa
  direccionEmpresa      String   // Dirección de la empresa
  telefonosEmpresa      String?  // Teléfonos de la empresa
  
  lugarFormacion        String   // Lugar específico (ej: escuela santa fe-Barbosa)
  tipoAmbiente          String   // Tipo de ambiente (ej: AULA MOVIL)
  
  programaEmprendimiento Boolean @default(false)
  programaBilinguismo   Boolean @default(false)
  atencionInstituciones Boolean @default(false)
  posconflicto          Boolean @default(false)
  senaEmprendeRural     Boolean @default(false)
  formacionEspecialMypimes Boolean @default(false)
  senaEmprendeRuralPosconflicto Boolean @default(false)
  tecnoacademiaSennova  Boolean @default(false)
  campesenaConvenio8842 Boolean @default(false)
  fullPopularConvenio8882 Boolean @default(false)
  icbfInstituto         Boolean @default(false)
  policiaNacional       Boolean @default(false)
  otroEspecificar       String? // Campo para "Otro (especifique cuál)"
  
  inicioInscripcion     DateTime // Inicio de inscripción
  finalizacionInscripcion DateTime // Finalización de inscripción
  fechaInicioCurso      DateTime // Fecha de inicio del curso
  fechaFinalizacionCurso DateTime // Fecha de finalización del curso
  
  horarios              HorarioDetallado[]
  
  // Justificación académica
  justificacion         String
  objetivosPersonalizados String[] // Objetivos adicionales del instructor
  resultadosEsperados   String?
  observaciones         String?
  
  // Validaciones
  cumpleRequisitos      Boolean  @default(false)
  autorizaUsoInfo       Boolean  @default(false)
  confirmaVeracidad     Boolean  @default(false)
  
  // Estado y seguimiento
  estado                EstadoSolicitud @default(BORRADOR)
  fechaSolicitud        DateTime @default(now())
  fechaRevision         DateTime?
  fechaAprobacion       DateTime?
  comentariosRevision   String?
  
  firmaInstructorResponsable String? // Firma del instructor responsable
  firmaCoordinadorAcademico String?  // Firma del coordinador académico
  versionDocumento      String @default("1") // Versión del documento
  codigoFormato         String @default("F11-3030-003/03-06") // Código de formato
  
  // Ficha generada (después de aprobación)
  numeroFicha           String?  @unique
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  @@map("solicitudes")
}

model HorarioDetallado {
  id          String    @id @default(cuid())
  solicitudId String
  solicitud   Solicitud @relation(fields: [solicitudId], references: [id], onDelete: Cascade)
  
  diaSemana   DiaSemana
  fecha       DateTime? // Made fecha optional since it can be flexible
  horaInicio  String    // "08:00"
  horaFin     String    // "16:00"
  
  esFlexible  Boolean   @default(true) // Permite cambios por inconvenientes
  observaciones String? // Observaciones específicas del horario
  
  @@map("horarios_detallados")
}

// Enums
enum Role {
  INSTRUCTOR
  COORDINADOR
  ADMIN
}

enum TipoFormacion {
  COMPLEMENTARIA
  TRANSVERSAL
  ESPECIFICA
  VIRTUAL
}

enum Modalidad {
  PRESENCIAL
  VIRTUAL
  MIXTA
  DESESCOLARIZADA // Added from Excel format
  COMBINADA       // Added from Excel format
}

enum EstadoSolicitud {
  BORRADOR
  PENDIENTE
  EN_REVISION
  APROBADA
  RECHAZADA
  CANCELADA
}

enum DiaSemana {
  LUNES
  MARTES
  MIERCOLES
  JUEVES
  VIERNES
  SABADO
  DOMINGO
}
